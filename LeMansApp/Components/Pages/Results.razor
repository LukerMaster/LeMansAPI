@page "/Races/{id}/Results"
@using LeMansAPI.Models
@using LeMansApp.Services
@inject ApiDownloader ApiDownloader;


<PageTitle>Results</PageTitle>

@if (RaceList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Drivers</th>
                <th>Car</th>
                <th>Distance (km)</th>
                <th>Pit Stops</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var race in RaceList)
            {
                <tr>
                    <td>@race.Id</td>
                    <td>@(string.Join("; ", race.Drivers.Select(x => x.FirstName + " " + x.LastName)))</td>
                    <td>@($"{race.Car.Brand} {race.Car.Model} - {race.Car.ProductionYear} ({race.Car.PeakPowerKw}kW)")</td>
                    <td>@((race.MetersDriven / 1000.0f).ToString("F"))</td>
                    <td>@race.PitStops.Count</td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    List<RaceEntryResult> RaceList;
    [Parameter]
    public string Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        RaceList = await ApiDownloader.GetFromApiAsListAsync<RaceEntryResult>($"api/RaceEntryResults/AllForRace/{Id}");
        RaceList = RaceList.OrderBy(x => x.MetersDriven).Reverse().ToList();
    }
}